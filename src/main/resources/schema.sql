CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	USER_ID BIGINT NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR(255) NOT NULL,
	LOGIN VARCHAR(255) NOT NULL,
	NAME VARCHAR(255),
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIEND_STATUS (
	STATUS_ID INTEGER NOT NULL AUTO_INCREMENT,
	STATUS VARCHAR(255) NOT NULL,
	CONSTRAINT FRIEND_STATUS_PK PRIMARY KEY (STATUS_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	USER_ID BIGINT NOT NULL,
	FRIEND_ID BIGINT NOT NULL,
	STATUS_ID INTEGER NOT NULL,
	CONSTRAINT FRIENDS_PK PRIMARY KEY (ID),
	CONSTRAINT FRIENDS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID),
	CONSTRAINT FRIENDS_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(USER_ID),
	CONSTRAINT FRIENDS_FK_2 FOREIGN KEY (STATUS_ID) REFERENCES PUBLIC.FRIEND_STATUS(STATUS_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRES (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	GENRE VARCHAR(255) NOT NULL,
	CONSTRAINT GENRES_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.MPA_RATING (
	RATING_ID INTEGER NOT NULL AUTO_INCREMENT,
	RATING VARCHAR(255) NOT NULL,
	CONSTRAINT MPA_RATING_PK PRIMARY KEY (RATING_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(255) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_ID INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_FK FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.MPA_RATING(RATING_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS_GENRE (
	FILM_ID BIGINT NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_GENRE_PK PRIMARY KEY (FILM_ID,GENRE_ID),
	CONSTRAINT FILMS_GENRE_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID),
	CONSTRAINT FILMS_GENRE_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS_LIKED_FILMS (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT USERS_LIKED_FILMS_PK PRIMARY KEY (FILM_ID,USER_ID),
	CONSTRAINT USERS_LIKED_FILMS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID),
	CONSTRAINT USERS_LIKED_FILMS_FK_1 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID)
);